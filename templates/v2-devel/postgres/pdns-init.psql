insert into tsigkeys (name, algorithm, secret) values ('dhcp', 'hmac-sha256', '{{dns.tsig_key}}');

{%- for interface in flat_int if interface.forward_domain is defined  and interface.address is defined %}

-- Forward Records
insert into domains (name, type) values ('{{interface.forward_domain}}', 'NATIVE');
insert into records (domain_id, name, type, content) values
(
  {{(loop.index*2)-1}}
  '{{interface.forward_domain}}',
  'SOA',
  '{{hostname}}.{{interface.forward_domain}}' || ' hostmaster.' || '{{interface.forward_domain}}' || ' 0 10 5 600000 5'
);
insert into records (domain_id, name, type, content) values
(
  {{(loop.index*2)-1}}
  '{{interface.forward_domain}}',
  'NS',
  '{{hostname}}.{{interface.forward_domain}}'
);
insert into records (domain_id, name, type, content) values
(
  {{(loop.index*2)-1}}
  '{{hostname}}.{{interface.forward_domain}}',
  'A',
  '{{interface.address|hostaddress}}'
);
insert into domainmetadata (domain_id, kind, content) values
(
  {{(loop.index*2)-1}}
  'TSIG-ALLOW-DNSUPDATE',
  'dhcp'
);

-- PTR records
insert into domains (name, type) values ('{{interface.address|netaddress("reverse")}}', 'NATIVE');
insert into records (domain_id, name, type, content) values
(
  {{loop.index*2}}
  '{{interface.address|netaddress("reverse")}}',
  'SOA',
  '{{hostname}}.{{interface.forward_domain}}' || ' hostmaster.' || '{{interface.forward_domain}}' || ' 0 10 5 600000 5'
);
insert into records (domain_id, name, type, content) values
(
  {{loop.index*2}}
  '{{interface.address|netaddress("reverse")}}',
  'NS',
  '{{hostname}}.{{interface.forward_domain}}'
);
insert into records (domain_id, name, type, content) values
(
  {{loop.index*2}}
  '{{interface.address|hostaddress("reverse")}}',
  'PTR',
  '{{hostname}}.{{interface.forward_domain}}'
);
insert into domainmetadata (domain_id, kind, content) values
(
  {{loop.index*2}}
  'TSIG-ALLOW-DNSUPDATE',
  'dhcp'
);

{%- endfor %}